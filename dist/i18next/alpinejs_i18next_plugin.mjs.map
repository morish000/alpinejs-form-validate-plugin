{
  "version": 3,
  "sources": ["../../src/i18next/alpinejs_i18next_plugin.ts"],
  "sourcesContent": ["/**\n * @module alpineI18NextPlugin\n * This module provides an i18Next plugin for Alpine.js to facilitate internationalization.\n */\n\nimport type { i18n, TOptions } from \"i18next\";\nimport type {\n  Alpine,\n  DirectiveData,\n  DirectiveUtilities,\n  ElementWithXAttributes,\n} from \"alpinejs\";\n\n/**\n * Creates an i18Next plugin for Alpine.js to handle internationalization.\n *\n * @param {Object} store - Contains configuration for i18next integration.\n * @param {number} store.timestamp - A timestamp to track updates.\n * @param {function} store.i18next - A function that returns the i18next instance.\n * @returns {(Alpine: Alpine) => void} A function accepting an Alpine instance to set up i18next integration.\n */\nexport const createI18NextPlugin =\n  (store: { timestamp: number; i18next: () => i18n }) =>\n    (Alpine: Alpine): void => {\n      const i18next = store.i18next();\n\n      /**\n       * Updates the timestamp to track changes.\n       * @private\n       */\n      const update = () => store.timestamp = Date.now();\n\n      [\"languageChanged\", \"loaded\"].forEach((event) => i18next.on(event, update));\n      ([\"added\", \"removed\"] as const).forEach((event) =>\n        i18next.store.on(event, update)\n      );\n\n      /**\n       * Adds the `$t` magic property to translate keys using i18next.\n       */\n      Alpine.magic(\"t\", () => (key: string | string[], options: TOptions) => {\n        store.timestamp;\n        return i18next.t(key, options);\n      });\n\n      /**\n       * Adds the `$i18next` magic property to access the full i18next instance.\n       */\n      Alpine.magic(\"i18next\", () => () => {\n        return i18next;\n      });\n\n      /**\n       * Defines a custom directive `x-i18next-text` to update text content based on i18next translations.\n       */\n      Alpine.directive(\n        \"i18next-text\",\n        (\n          el: ElementWithXAttributes,\n          { expression }: DirectiveData,\n          { evaluateLater, effect }: DirectiveUtilities,\n        ) => {\n          const args = evaluateLater<[string, TOptions | undefined]>(\n            expression,\n          );\n          /**\n           * Reactively updates the element's text content based on the evaluated expression.\n           */\n          effect(() => {\n            store.timestamp;\n            args(([key, options]: [string, TOptions | undefined]) => {\n              Alpine.mutateDom(() => {\n                el.textContent = i18next.t(key, options);\n              });\n            });\n          });\n        },\n      );\n    };\n"],
  "mappings": "AAqBO,MAAMA,EACVC,GACEC,GAAyB,CACxB,MAAMC,EAAUF,EAAM,QAAQ,EAMxBG,EAAS,IAAMH,EAAM,UAAY,KAAK,IAAI,EAEhD,CAAC,kBAAmB,QAAQ,EAAE,QAASI,GAAUF,EAAQ,GAAGE,EAAOD,CAAM,CAAC,EACzE,CAAC,QAAS,SAAS,EAAY,QAASC,GACvCF,EAAQ,MAAM,GAAGE,EAAOD,CAAM,CAChC,EAKAF,EAAO,MAAM,IAAK,IAAM,CAACI,EAAwBC,KAC/CN,EAAM,UACCE,EAAQ,EAAEG,EAAKC,CAAO,EAC9B,EAKDL,EAAO,MAAM,UAAW,IAAM,IACrBC,CACR,EAKDD,EAAO,UACL,eACA,CACEM,EACA,CAAE,WAAAC,CAAW,EACb,CAAE,cAAAC,EAAe,OAAAC,CAAO,IACrB,CACH,MAAMC,EAAOF,EACXD,CACF,EAIAE,EAAO,IAAM,CACXV,EAAM,UACNW,EAAK,CAAC,CAACN,EAAKC,CAAO,IAAsC,CACvDL,EAAO,UAAU,IAAM,CACrBM,EAAG,YAAcL,EAAQ,EAAEG,EAAKC,CAAO,CACzC,CAAC,CACH,CAAC,CACH,CAAC,CACH,CACF,CACF",
  "names": ["createI18NextPlugin", "store", "Alpine", "i18next", "update", "event", "key", "options", "el", "expression", "evaluateLater", "effect", "args"]
}
