import{debounce as S,merge as V,throttle as R}from"./utils/index.js";import{fieldDefaultConfig as O,formatMessageConfig as L,formatValidationConfig as M,formDefaultConfig as A}from"./config/index.js";import{createFieldValueResolver as I,createHtml5ValidationMessageResolver as $,createInputRateLimitter as w,createMessageResolver as B,createMessageStore as U}from"./functions/index.js";import{createFieldValidator as W,createFormValidator as X}from"./validators/index.js";const q=({createMessageStore:h,createFormValidator:C,createFieldValidator:y,formDefaultConfig:_,fieldDefaultConfig:D})=>({defaultFunctionsOptions:m={},defaultFormOptions:x={},defaultFieldOptions:b={}}={})=>r=>{const c=(()=>{const e={fieldValueResolver:m.fieldValueResolver??I(),messageResolver:m.messageResolver??B(),customFieldValidators:m.customFieldValidators??[],inputRateLimitter:m.inputRateLimitter??w(S,R),html5ValidationMessageResolver:m.html5ValidationMessageResolver??$()};return{...e,messageStore:m.messageStore??h(r)(e)}})();r.directive("validate-form",(e,{expression:s},{evaluate:f,cleanup:d})=>{const i=(()=>{const n={..._(e)},p={...x},g={...s?f(s):{}},E=V(n,p,g);return E.trigger.target=g.trigger?.target??p.trigger?.target??n.trigger.target,E})(),{before:F,after:v,preventDefault:l}=i.trigger,u=C(e,i),t=n=>{F?.call(e,n);const p=u.call(e);v?.call(e,n),!p&&l&&n.preventDefault(),p?e.dispatchEvent(new CustomEvent(`${r.prefixed("validate")}:success`)):e.dispatchEvent(new CustomEvent(`${r.prefixed("validate")}:failed`))},{target:o,event:a}=i.trigger;o.addEventListener(a,t),e._x_validation=i,d(()=>{o.removeEventListener(a,t),delete e._x_validation})}),r.directive("validate",(e,{expression:s},{evaluate:f,cleanup:d})=>{if(!e.id||!e.name)throw new Error("Validation error: Form elements with validation rules must have an id and name attribute.");const i=(()=>{const t=V(D(),b,e.form?._x_validation?.report!=null?{report:e.form?._x_validation.report}:{},s?f(s):{});return t.v=M(t.v),t.m=L(t.m),t})(),F=y(r)(e,i,c),v=({before:t,after:o},a)=>n=>{t?.call(e,n),a.apply(e),e._x_validation?.formSubmit&&i.report&&e.reportValidity(),o?.call(e,n)},l=[],u=(t,o,a)=>{t&&a&&l.push({eventName:o,handler:a})};u(!!i.onChange||!i.onBlur&&!i.onInput,"change",v(!i.onChange||i.onChange===!0?{}:i.onChange,F)),u(!!i.onBlur,"blur",v(!i.onBlur||i.onBlur===!0?{}:i.onBlur,F)),u(!!i.onInput,"input",c.inputRateLimitter(e,v(!i.onInput||i.onInput===!0?{}:i.onInput,F),i)),e._x_validation={...i,formSubmit:!e.form,validate:function(){F(),this.formSubmit=!0,["radio","checkbox"].includes(e.type)&&Array.from(e.form?.querySelectorAll(`input[type="${e.type}"][name="${e.name}"]`)??[]).filter(t=>t!==e&&!t.hasAttribute(r.prefixed("validate"))).forEach(t=>{l.forEach(({eventName:o,handler:a})=>{t.addEventListener(o,a)})})}},c.messageStore.create(e,t=>{e.setCustomValidity(t)}),l.forEach(({eventName:t,handler:o})=>{e.addEventListener(t,o)}),d(()=>{["radio","checkbox"].includes(e.type)&&Array.from(e.form?.querySelectorAll(`input[type="${e.type}"][name="${e.name}"]`)??[]).filter(t=>t!==e&&!t.hasAttribute(r.prefixed("validate"))).forEach(t=>{l.forEach(({eventName:o,handler:a})=>{t.removeEventListener(o,a)})}),l.forEach(({eventName:t,handler:o})=>{e.removeEventListener(t,o),o.cancel?.()}),c.messageStore.delete(e),delete e._x_validation})}),r.directive("validate-message-for",(e,{expression:s},{effect:f})=>{f(()=>{const d=document.querySelector(s);r.mutateDom(()=>{e.textContent=d?c.messageStore.get(d):""})})})},P=q({createMessageStore:U,createFormValidator:X,createFieldValidator:W,formDefaultConfig:A,fieldDefaultConfig:O}),j=P();export{P as createValidatePlugin,j as createValidatePluginDefault,q as createValidatePluginInternal};
//# sourceMappingURL=alpinejs_form_validate_plugin.mjs.map
